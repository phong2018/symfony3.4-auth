# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:


    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        AppBundle\Entity\User: bcrypt

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        users:
            chain:
                providers: [users_in_memory, users_in_db]

        users_in_memory:
            memory:
                users:
                    foo: { password: test, roles: 'ROLE_USER' }  
        users_in_db:
            entity: { class: AppBundle\Entity\User, property: username }

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            # activate different ways to authenticate
            logout_on_user_change: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            #form_login: ~
            form_login:
                login_path: login
                check_path: login 
                csrf_token_generator: security.csrf.token_manager
            logout:
                # The route name the user can go to in order to logout
                path: security_logout
                # The name of the route to redirect to after logging out
                target: homepage

    encoders:
        AppBundle\Entity\User: bcrypt

    access_control:
        # this is a catch-all for the admin area
        # additional security lives in the controllers
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/$, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/hello, roles: ROLE_USER }